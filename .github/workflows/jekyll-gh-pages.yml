# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for `git log`
        
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
  
      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Check for changed ipynb files in last five commits
        run: |
          echo "Checking for changed .ipynb files in the last five commits:"      
          changed_notebooks=$(git diff --name-only HEAD~5 HEAD -- '*.ipynb')

          # Check if there are any .ipynb files changed
          if [ -n "$changed_notebooks" ]; then
            echo "Changed .ipynb files:"
            echo "$changed_notebooks"
            
            # Step 2: Iterate over the changed notebooks and convert them to Markdown
            while IFS= read -r notebook; do
              echo "Converting $notebook to Markdown..."

              # Use jupyter nbconvert to convert the notebook to Markdown
              poetry run jupyter nbconvert --to markdown "$notebook"

              # Find the generated Markdown file
              markdown_file="${notebook%.ipynb}.md"
              
              # Prepend two lines of three dashes to the Markdown file
              if [ -f "$markdown_file" ]; then
                sed -i '1i ---\n---\n' "$markdown_file"
                echo "$markdown_file updated with dashes at the top"
              else
                echo "Warning: Markdown file $markdown_file not found"
              fi
              echo "$notebook converted to Markdown"
              echo "changed=true" >> $GITHUB_ENV
            done <<< "$changed_notebooks"
          else
            echo "No notebook changes detected."
          fi

      # - name: Convert all notebooks to Markdown
      #   run: |
      #     echo "Converting all notebooks to Markdown..."

      #     # Find all .ipynb files and process each one
      #     find . -name "*.ipynb" -print0 | while IFS= read -r -d '' notebook; do
      #       echo "Converting $notebook to Markdown..."

      #       # Use jupyter nbconvert to convert the notebook to Markdown
      #       poetry run jupyter nbconvert --to markdown "$notebook"

      #       # Find the generated Markdown file
      #       markdown_file="${notebook%.ipynb}.md"
            
      #       # Prepend two lines of three dashes to the Markdown file for Jekyll front matter
      #       if [ -f "$markdown_file" ]; then
      #         sed -i '1i ---\n---\n' "$markdown_file"
      #         echo "$markdown_file updated with dashes at the top"
      #       else
      #         echo "Warning: Markdown file $markdown_file not found"
      #       fi
      #       echo "$notebook converted to Markdown"
      #     done


      
      - name: Commit and push converted notebooks (if any)
        # if: env.changed == 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add . # This will now add .md files
          git commit -m "Publish updated notebooks as Markdown to GitHub Pages"
          git push

  
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
