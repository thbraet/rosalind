# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for `git log`
        
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
  
      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Display last five commits
        run: |
          echo "Last five commits:"
          git log -5 --oneline

      - name: Display diff of last five commits
        run: |
          echo "Displaying the diff of the last five commits:"
          git diff HEAD~5

      - name: Fetch and Check for Changes
        run: |
          echo "Fetching the last 5 commits..."
          git fetch --depth=5
          
          echo "Changed files between HEAD and refs/remotes/origin/main:"
          changed_all_files=$(git diff --name-only refs/remotes/origin/main HEAD)
          echo "$changed_all_files"
      
          # Get the list of changed .ipynb files specifically
          echo "Checking for notebook files (*.ipynb)..."
          changed_files=$(git diff --name-only refs/remotes/origin/main HEAD -- '**/*.ipynb')
          echo "$changed_files"
          
          if [ -n "$changed_files" ]; then
            echo "Notebooks have changed, proceeding with conversion."
            echo "changed=true" >> $GITHUB_ENV
      
            # Debug: Print the diff for each changed notebook
            echo "Printing git diff for the changed notebooks:"
            for file in $changed_files; do
              echo "Differences in $file:"
              git diff refs/remotes/origin/main -- "$file"
              echo ""
            done
          else
            echo "No notebook changes detected, skipping conversion."
            echo "changed=false" >> $GITHUB_ENV
          fi
        

      - name: Print changes in notebooks files
        run: |
          git fetch --depth=5

          changed_all_files=$(git diff refs/remotes/origin/main)
          echo $changed_all_files


          # Get the list of changed .ipynb files
          changed_files=$(git diff --name-only refs/remotes/origin/main -- '**/*.ipynb')
          echo changed_files
          
          if [ -n "$changed_files" ]; then
            echo "Notebooks have changed, proceeding with conversion."
            echo "changed=true" >> $GITHUB_ENV
          
            # Print the diff for each changed notebook
            echo "Printing git diff for the changed notebooks:"
            for file in $changed_files; do
              echo "Differences in $file:"
              git diff refs/remotes/origin/main -- "$file"
              echo ""
            done
          else
            echo "No notebook changes detected, skipping conversion."
            echo "changed=false" >> $GITHUB_ENV
          fi


      # - name: Check for changes in notebook files
      #   id: check_changes
      #   run: |
      #     git fetch --depth=3
      #     if git diff --name-only refs/remotes/origin/main -- '**/*.ipynb' | grep -q '\.ipynb$'; then
      #       echo "Notebooks have changed, proceeding with conversion."
      #       echo "changed=true" >> $GITHUB_ENV
      #     else
      #       echo "No notebook changes detected, skipping conversion."
      #       echo "changed=false" >> $GITHUB_ENV
      #     fi

      - name: Debug directory structure
        run: |
          echo "Current working directory:"
          pwd
          echo "List of all files and folders:"
          ls -R
  
      - name: Print resolved paths for notebooks
        run: |
          echo "Notebook paths:"
          find "Bioinformatics Stronghold" -name "*.ipynb" -exec realpath {} \;

      - name: List all .ipynb files (for debugging)
        run: |
          echo "Listing all .ipynb files:"
          find . -name "*.ipynb"

      # - name: Convert notebooks to HTML
      #   run: |
      #     # List all .ipynb files and pass them individually to jupyter nbconvert
      #     find . -name "*.ipynb" -exec poetry run jupyter nbconvert --to html --output-dir=./ --template=lab {} \;

      - name: Convert notebooks to Markdown
        if: env.changed == 'true'
        run: |
          # Convert each notebook to Markdown, keeping the directory structure intact
          find . -name "*.ipynb" -exec sh -c '
            dir=$(dirname "{}");
            output_dir="$dir"
            filename=$(basename "{}" .ipynb)
            markdown_file="$output_dir/$filename.md"
      
            # Convert to Markdown
            poetry run jupyter nbconvert --to markdown --output-dir "$output_dir" "{}"
      
            # Prepend the section at the top of the markdown file
            echo -e "---\ntitle: $filename\n---\n$(cat "$markdown_file")" > "$markdown_file"
          ' \;
      
      - name: List generated Markdown files
        run: |
          echo "Listing generated Markdown files:"
          find . -name "*.md"
      
      - name: Commit and push converted notebooks (if any)
        if: env.changed == 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add . # This will now add .md files
          git commit -m "Publish updated notebooks as Markdown to GitHub Pages"
          git push

  
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
